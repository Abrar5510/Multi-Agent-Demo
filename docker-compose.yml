version: "3.9"

services:
  # Infrastructure Services
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Coral Server
  coral-server:
    image: ghcr.io/coral-protocol/coral-server:latest
    container_name: coral-server
    ports:
      - "5555:5555"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./config.toml:/config/config.toml
      - ./registry.toml:/config/registry.toml
      - /var/run/docker.sock:/var/run/docker.sock


  # Tooling Services
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    env_file:
      - .env
    depends_on:
      coral-server:
        condition: service_healthy
    restart: unless-stopped

  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - flowise_data:/usr/src/app/.data
    depends_on:
      coral-server:
        condition: service_healthy
    restart: unless-stopped

  # Backend (Node.js)
  backend:
    build: ./backend
    container_name: coral-backend
    ports:
      - "4000:4000"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

  # Frontend (React/Vite)
  frontend:
    build: ./frontend
    container_name: coral-frontend
    ports:
      - "5173:5173"
    env_file:
      - .env
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    restart: on-failure

  # AI Agents
  autogpt:
    build:
      context: ./agents/autogpt/AutoGPT
      dockerfile: Dockerfile
    container_name: autogpt
    env_file:
      - .env
    environment:
      - SERVICE_NAME=autogpt-service
      - SERVICE_PORT=8000
      - REDIS_URL=redis://redis:6379
      - CORAL_SERVER_URL=http://coral-server:5555
    ports:
      - "8000:8000"
    volumes:
      - ./agents/autogpt:/app/code
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

  superagi:
    build:
      context: ./agents/superagi/SuperAGI
      dockerfile: Dockerfile
    container_name: superagi
    env_file:
      - .env
    environment:
      - SERVICE_NAME=superagi-service
      - SERVICE_PORT=8001
      - DB_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://redis:6379
      - CORAL_SERVER_URL=http://coral-server:5555
    ports:
      - "8001:8001"
    volumes:
      - ./agents/superagi:/app/code
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

  crewai:
    build:
      context: ./agents/crewai/crewAI
      dockerfile: Dockerfile
    container_name: crewai
    env_file:
      - .env
    environment:
      - SERVICE_NAME=crewai-service
      - SERVICE_PORT=8002
      - CORAL_SERVER_URL=http://coral-server:5555
    ports:
      - "8002:8002"
    volumes:
      - ./agents/crewai:/app/code
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

  chatdev:
    build:
      context: ./agents/chatdev/ChatDev
      dockerfile: Dockerfile
    container_name: chatdev
    env_file:
      - .env
    environment:
      - SERVICE_NAME=chatdev-service
      - SERVICE_PORT=8005
      - CORAL_SERVER_URL=http://coral-server:5555
    ports:
      - "8005:8005"
    volumes:
      - ./agents/chatdev:/app/code
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

  autopr:
    build:
      context: ./agents/autopr/AutoPR
      dockerfile: Dockerfile
    container_name: autopr
    env_file:
      - .env
    environment:
      - SERVICE_NAME=autopr-service
      - SERVICE_PORT=8006
      - CORAL_SERVER_URL=http://coral-server:5555
    ports:
      - "8006:8006"
    volumes:
      - ./agents/autopr:/app/code
    depends_on:
      coral-server:
        condition: service_healthy
    restart: on-failure

volumes:
  coral_data:
  n8n_data:
  flowise_data:
  redis_data:
  postgres_data:
  autogpt_data:
  superagi_data:
  crewai_data:
  chatdev_data:
  autopr_data:

networks:
  default:
    driver: bridge
    name: ai-agents-network

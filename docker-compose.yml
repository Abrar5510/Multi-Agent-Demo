services:
  coral-server:
    image: ghcr.io/coral-protocol/coral-server:latest
    container_name: ${CORAL_SERVICE_NAME}
    ports:
      - "${CORAL_SERVICE_PORT}:5555"
    env_file:
      - .env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped


  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    env_file:
      - .env
    depends_on:
      - coral-server
    restart: unless-stopped

  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - flowise_data:/usr/src/app/.data
    depends_on:
      - coral-server
    restart: unless-stopped

  autogpt:
    build: ./agents/autogpt/AutoGPT
    container_name: autogpt
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${AUTOGPT_SERVICE_NAME}
      - SERVICE_PORT=${AUTOGPT_SERVICE_PORT}
    ports:
      - "${AUTOGPT_SERVICE_PORT}:${AUTOGPT_SERVICE_PORT}"
    volumes:
      - autogpt_data:/app
    depends_on:
      - coral-server
      - redis
    restart: on-failure

  superagi:
    build: ./agents/superagi/SuperAGI
    container_name: superagi
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${SUPERAGI_SERVICE_NAME}
      - SERVICE_PORT=${SUPERAGI_SERVICE_PORT}
    ports:
      - "${SUPERAGI_SERVICE_PORT}:${SUPERAGI_SERVICE_PORT}"
    volumes:
      - superagi_data:/app
    depends_on:
      - coral-server
      - postgres
      - redis
    restart: on-failure

  crewai:
    build: ./agents/crewai/crewAI
    container_name: crewai
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${CREWAI_SERVICE_NAME}
      - SERVICE_PORT=${CREWAI_SERVICE_PORT}
    ports:
      - "${CREWAI_SERVICE_PORT}:${CREWAI_SERVICE_PORT}"
    volumes:
      - crewai_data:/app
    depends_on:
      - coral-server
    restart: on-failure

  langchain-agent:
    build: ./agents/langchain-agent/agents-from-scratch
    container_name: langchain-agent
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${LANGCHAIN_SERVICE_NAME}
      - SERVICE_PORT=${LANGCHAIN_SERVICE_PORT}
    ports:
      - "${LANGCHAIN_SERVICE_PORT}:${LANGCHAIN_SERVICE_PORT}"
    volumes:
      - langchain_data:/app
    depends_on:
      - coral-server
    restart: on-failure

  finrobot:
    build: ./agents/finrobot/FinRobot
    container_name: finrobot
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${FINROBOT_SERVICE_NAME}
      - SERVICE_PORT=${FINROBOT_SERVICE_PORT}
    ports:
      - "${FINROBOT_SERVICE_PORT}:${FINROBOT_SERVICE_PORT}"
    volumes:
      - finrobot_data:/app
    depends_on:
      - coral-server
      - postgres
    restart: on-failure

  chatdev:
    build: ./agents/chatdev/ChatDev
    container_name: chatdev
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${CHATDEV_SERVICE_NAME}
      - SERVICE_PORT=${CHATDEV_SERVICE_PORT}
    ports:
      - "${CHATDEV_SERVICE_PORT}:${CHATDEV_SERVICE_PORT}"
    volumes:
      - chatdev_data:/app
    depends_on:
      - coral-server
    restart: on-failure

  autopr:
    build: ./agents/autopr/AutoPR
    container_name: autopr
    env_file:
      - .env
    environment:
      - SERVICE_NAME=${AUTOPR_SERVICE_NAME}
      - SERVICE_PORT=${AUTOPR_SERVICE_PORT}
    ports:
      - "${AUTOPR_SERVICE_PORT}:${AUTOPR_SERVICE_PORT}"
    volumes:
      - autopr_data:/app
    depends_on:
      - coral-server
    restart: on-failure

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  coral_data:
  n8n_data:
  flowise_data:
  autogpt_data:
  superagi_data:
  crewai_data:
  langchain_data:
  finrobot_data:
  chatdev_data:
  autopr_data:
  redis_data:
  postgres_data:
